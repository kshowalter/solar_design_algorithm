var settings_constants = require('./settings/settings_constants.js');
var tables = require('./tables.js');
var f = require('./functions/functions.js');
var math = require('mathjs');
var sf = require('spreadsheet_functions');

var PI = function(){
  return math.pi;
};

var calculate_system = function(system_settings){
  var notes = system_settings.state.notes;

  var array = system_settings.state.system.array;
  var module = system_settings.state.system.module;
  var source = system_settings.state.system.source;
  var system = system_settings.state.system.module;
  var inverter = system_settings.state.system.inverter;
  var interconnection = system_settings.state.system.interconnection;
  var circuits = system_settings.state.system.circuits;

  var error_check = {};

  var report_error = function(error_message){
    notes.errors.push(error_message);
  };


  ///////////////////
  // data fixes

  array.circuits_per_MPPT = array.circuits_per_MPPT || 1;
  inverter.tranformerless = true;

  var max_modules = array.largest_string * (array.num_of_strings-1) + array.smallest_string;
  var min_modules = array.smallest_string * (array.num_of_strings-1) + array.largest_string;
  if( array.num_of_modules > max_modules ){
    notes.warnings.push('Module total exceeds the number possible with selected string sizes. Using max number of modules.');
    array.num_of_modules = max_modules;
  }
  if( array.num_of_modules < min_modules ){
    notes.warnings.push('Module total is less than the number possible with selected string sizes.');
    array.num_of_modules = min_modules;
  }

  if( array.num_of_strings === 1 && ( array.smallest_string !== array.largest_string ) ){
    notes.warnings.push('For a single string system, smallest and largest string should be the same. Using largest string size.');
    array.smallest_string = array.largest_string;
  }

  ///////////////////////////////////////////
  /// calculations from standard document ///
  ///////////////////////////////////////////
